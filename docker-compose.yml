services:
  san_bot:
    build:
      context: .
      # Не указываем target: builder, чтобы дошло до финального слоя.
      # Или, если хотите явно, переименуйте final в `AS final` и пропишите target: final

    container_name: san_bot_container

    # Переменные окружения берём из .env (Токен Телеграм, ключи, лог-уровень и т.д.)
    env_file:
      - .env
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1

    # Пробрасываем локальные папки data и logs в контейнер
    volumes:
      - ./data:/app/data:rw,Z
      - ./logs:/app/logs:rw,Z

    # Контейнер будет перезапускаться, если упадёт
    restart: unless-stopped

    # Настраиваем сеть для доступа к Telegram
    networks:
      - bot_network

    # Проверка, что бот запущен
#    healthcheck:
#      test: ["CMD-SHELL", "pgrep -f 'python bot.py' || exit 1"]
#      interval: 30s
#      timeout: 5s
#      retries: 3

networks:
  bot_network:
    driver: bridge
    # internal: true # Убираем, чтобы бот видел внешний интернет (Telegram servers)
